trigger:
  - master


variables:
  buildConfiguration: 'Release'
  webAppName: PipelineApps

pool:
  name: Azure Pipelines
  vmImage: 'ubuntu-latest'
 

stages:
  - stage: 'Build'
    displayName: 'Build the web app'
    jobs:
    - job: 'Build'
      displayName: 'Build-Job'
      pool:
        name: Azure Pipelines
        vmImage: 'ubuntu-latest'
        

      variables:
        wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
        dotnetSdkVersion: '5.0.x'

      steps:
        - task: UseDotNet@2
          displayName: 'Use .NET CORE SDK $(dotnetSdkVersion)'
          inputs:
           version: '$(dotnetSdkVersion)'
             
        - task: Npm@1
          displayName: 'Use Npm install'
          inputs:
            command: install
            verbose: false    

        - task: DotNetCoreCLI@2
          displayName: 'Build the project - $(buildConfiguration)' 
          inputs:
            command: build
            arguments: '-restore --configuration $(buildConfiguration)'
            projects: '**/*.csproj'

        - task: DotNetCoreCLI@2
          displayName: 'Publish the project - $(buildConfiguration)'
          inputs:
            command: publish
            projects: '**/*.csproj'
            publishWebProjects: true
            arguments: '--no-build  --configuration $(buildConfiguration) --output $(Build.ArifactStagingDirectory)/$(buildConfiguration)'
            zipAfterPublish: true
           

  - stage: 'Deploy'
    displayName: 'Deploy the web app'
    dependsOn: Build
    jobs:
      - job: deployJob
        steps:
        - task: AzureWebApp@1
          displayName: 'Azure app service deploy'
          inputs:
            azureSubscription: 'Azure subscription 1 (f016713d-47fd-4917-a2c7-c2805377c59c)'
            appName: '$(WebAppName)'
            appType: 'webAppLinux'
            package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'  


